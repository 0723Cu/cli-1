// When Advisory.load() is called in the main thread, it spins up
// a worker thread to do the actual loading, because this can be
// a CPU-intensive operation which blocks the main thread otherwise.

const {
  Worker,
  isMainThread,
  parentPort,
  workerData,
} = require('worker_threads')

const Advisory = require('./advisory.js')
const load = async ({ name, source, options, cached, packument }) => {
  const advisory = new Advisory(name, source, options)
  // guard against infinite recursion, mostly for testing
  advisory.inWorkerThread = true
  await advisory.load(cached, packument)
  parentPort.postMessage(advisory)
}

if (isMainThread)
  module.exports = load
else
  load(workerData).catch(er => parentPort.postMessage({
    error: {
      message: er.message,
      stack: er.stack,
    },
  }))
